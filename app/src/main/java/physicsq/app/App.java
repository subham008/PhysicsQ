/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package physicsq.app;

import java.awt.Color;

import javax.swing.JButton;
import javax.swing.JFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import java.awt.*;

public class App  extends JFrame{

    public App() {
        setTitle("PhysicsQ");
        setSize(800, 600);
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBackground(Color.BLACK);

       Particle particles[]=createParticles(4, 4);

       Movement movement=new Movement();
       for(Particle particle:particles)
           movement.addParticle(particle);


       for(Particle particle:particles)
          super.add(particle);

       Animation animation=new Animation(movement) ;  


       // Create buttons for start, stop, and resume
        JButton startButton = new JButton("Start");
        startButton.setBounds(650, 20, 100, 30);
        startButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                animation.startAnimation();
            }
        });
        super.add(startButton);

        JButton stopButton = new JButton("Stop");
        stopButton.setBounds(650, 60, 100, 30);
        stopButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                animation.stopAnimation();
            }
        });
        super.add(stopButton);

        JButton resumeButton = new JButton("Resume");
        resumeButton.setBounds(650, 100, 100, 30);
        resumeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                animation.resumeAnimation();
            }
        });
        super.add(resumeButton);

        JButton changeDelayButton = new JButton("Change Delay");
        changeDelayButton.setBounds(650, 140, 150, 30);
        changeDelayButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Display popup dialog to edit delay
                
                String input = JOptionPane.showInputDialog(this, "Enter new delay (milliseconds):");
                try {
                    int delay = Integer.parseInt(input);
                    animation.changeDelay(delay);
                } catch (NumberFormatException ex) {
                    //JOptionPane.showMessageDialog(this, "Invalid input. Please enter a valid number.");
                }
            }
        });

        super.add(changeDelayButton);
    }
  

    public static 
    
    Particle[] createParticles(int xCount, int yCount) {
        Particle[] particles = new Particle[xCount * yCount];
        int particleWidth = 50; // Width of each particle
        int particleHeight = 50; // Height of each particle
        int margin = 30; // Margin between particles

        for (int i = 0; i < xCount; i++) {
            for (int j = 0; j < yCount; j++) {
                Particle particle = new Particle();
                int x = i * (particleWidth + margin);
                int y = j * (particleHeight + margin);
                particle.setBounds(x, y, particleWidth, particleHeight);
                particles[i * yCount + j] = particle;
            }
        }

        particles[12].setMass(20);
        particles[12].setVelocity(-5,-5);
        return particles;
    }




    public static void main(String[] args) {
         App app=new App();
         app.setLayout(null);
         app.setVisible(true);
    }
}
